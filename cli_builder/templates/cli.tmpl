module main

import cli
import cli_builder
import os
import x.json2 { Any }

fn add_flag(mut cmd cli.Command, name string, required bool) {
	cmd.add_flag(cli.Flag{
		flag: cli.FlagType.string
		name: name
		required: required
	})
}

fn main() {

    mut app := cli.Command{
        name: "@api.info.title"
        description: "@api.info.description"
        execute: fn (cmd cli.Command) ? {
			println(cmd.help_message())
			return
		}
    }

	mut cmd := cli.Command{}
	mut cmds := []cli.Command{}
@for path, path_item in api.paths
	@for method, operation in path_item.get_operations()
	// -------------- New Command -------------- //

    cmd = cli.Command{
        name: "@operation.operation_id"
		description: "@operation.description"
		execute: fn (cmd cli.Command) ? {
			cli_builder.execute_command("@method", "@{api.servers[0].url}" + "@path",
										@operation.get_request_body().content.keys(), cmd) ?
		}
    }
	@if operation.get_request_body().content.keys().len > 0
    add_flag(mut cmd, 'body', true)
	@end
	@for parameter in operation.get_path_parameters()
	add_flag(mut cmd, '@parameter.name', @parameter.required)
	@end
	cmds << cmd
	@end
@end

	// ----------------------------------------- //

    app.add_commands(cmds)
    app.setup()
    app.parse(os.args)
}